//Create web Application that contains Voters details and check proper validation for (name, age, and nationality), as Name should be in upper case letters only, Age should not be less than 18 yrs and Nationality should be Indian

<html>
<head>
    <title>Voter Registration</title>
</head>
<body>
    <h1>Voter Registration</h1>
    <form id="voterForm" onsubmit="validate()">
        <label for="name">Name (Upper case only):</label><br>
        <input type="text" id="name" name="name"><br><br>

        <label for="age">Age:</label><br>
        <input type="number" id="age" name="age" min="18" required><br><br>

        <label for="nationality">Nationality:</label><br>
        <select id="nationality" name="nationality" required>
            <option value="">Select Nationality</option>
            <option value="Indian">Indian</option>
            <option value="Other">Other</option>
        </select><br><br>

        <button type="submit">Submit</button>
    </form>

    <script>
        function validate(){
            var name = document.getElementById('name').value;
            var age = document.getElementById('age').value;
            var nationality = document.getElementById('nationality').value;

            if (!/^[A-Z ]+$/.test(name)) {
                alert('Name should be in uppercase letters only.');
                return false;
            }
            if (age < 18) {
                alert('Age must be 18 or above.');
                return false;
            }
            if (nationality !== 'Indian') {
                alert('Nationality should be Indian only.');
                return false;
            }
            alert("Registration form submitted!");
        }
    </script>
</body>
</html>

//Create your own transactions dataset and apply the above process on your dataset

import pandas as pd
from mlxtend.frequent_patterns import apriori,association_rules
transaction=[['sugar','tea'],['coffee','tea','sugar'],['tea','coffee'],['coffee','suagr','tea','milk']]

from mlxtend.preprocessing import TransactionEncoder
te=TransactionEncoder()
te_array=te.fit(transaction).transform(transaction)
df=pd.DataFrame(te_array,columns=te.columns_)
df = df.astype(int)
df

freq_items=apriori(df,min_support=0.5,use_colnames=True)
rules=association_rules(freq_items,metric='support',min_threshold=0.05)
rules=rules.sort_values(['support','confidence'],ascending=[False,False])
rules